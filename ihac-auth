#!/bin/bash
#version:	2.0
#license:	MIT
#author:	Simon Kowallik <github simonkowallik.com>
#source:	https://github.com/simonkowallik/iHAC
#
IHACAUTH="$HOME/.ihac/auth.jar"
if [[ ! -d "$HOME/.ihac" ]]; then mkdir "$HOME/.ihac"; fi
if [[ -f "$IHACAUTH" ]]; then rm -f "$IHACAUTH"; fi
touch "$IHACAUTH"; chmod 0600 "$IHACAUTH"; 

IHACPROXYFILE="$HOME/.ihac/IHACPROXY"
if [[ -f "$IHACPROXYFILE" ]]; then IHACPROXY="$(<$IHACPROXYFILE)"; fi
if [[ ! -z "$IHACPROXY" ]]; then IHACPROXY="x $IHACPROXY"; fi

function echoerr() { echo "$@" 1>&2; }
function urlencode() {
  local length="${#1}"
  for (( i = 0; i < length; i++ )); do
    local c="${1:i:1}"
    case $c in
      [a-zA-Z0-9.~_-]) printf "$c" ;;
      ' ') printf + ;;
      *) printf '%%%X' "'$c"
    esac
  done
}

command -v curl >/dev/null 2>&1 || { echoerr "Error: $(basename $0) requires curl but it is not installed."; exit 1; }

if [[ -z "$1" ]] && [[ -t 0 ]]
then
  echo -n "Username: "
  read username
  if [[ -z "$username" ]]; then echoerr "Error: need username to authenticate."; exit 1; fi
  echo -n "Password: "
  read -s password && echo
  if [[ -z "$password" ]]; then echoerr "Error: need password to authenticate."; exit 1; fi
  USRPW="userid=$(urlencode $username)&passwd=$(urlencode $password)"
else
  if [[ "$1" == "delete" ]] || [[ "$1" == "--delete" ]] || [[ "$1" == "-d" ]] || [[ "$1" == "--logout" ]]
  then
	if [[ -f "$IHACAUTH" ]]; then rm -f "$IHACAUTH"; fi
    echo "OK"
	exit 0
  elif [[ ! -z "$1" ]] && [[ -s "$1" ]]
  then
    USRPW=$(<$1)
  elif [[ ! -z "$1" ]]
  then
    USRPW=$1
  elif [[ ! -t 0 ]]
  then
    read USRPW
	if [[ -z "$USRPW" ]]; then echoerr "Error: need credentials to authenticate."; exit 1; fi
  else
	echoerr "Error: need credentials to authenticate."
	exit 1
  fi
fi

result=`curl -si$IHACPROXY --user-agent "iHAC/2.0" --cookie-jar "$IHACAUTH" \
 --data $USRPW \
 -o - https://login.f5.com/resource/loginAction.jsp \
 | sort -r \
 | perl -ne 's/\r\n//g;
	if(m/ssosession/gi) {print "OK";exit 0}
	if(m/login.jsp/gi)  {print "auth_failed";exit 0}'`

if [[ "$result" == "OK" ]]; then echo "OK"; exit 0; fi
if [[ "$result" == "auth_failed" ]]; then echoerr "Error: authentication failed."; exit 1; fi
if [[ -z "$result" ]]; then echoerr "Error: Unknown error occurred."; exit 1; fi